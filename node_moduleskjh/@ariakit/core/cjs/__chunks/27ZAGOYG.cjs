"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _6SPJEESBcjs = require('./6SPJEESB.cjs');


var _M6ZA7XUPcjs = require('./M6ZA7XUP.cjs');



var _6455U47Tcjs = require('./6455U47T.cjs');

// src/disclosure/disclosure-store.ts
function createDisclosureStore(props = {}) {
  var _a;
  const syncState = (_a = props.store) == null ? void 0 : _a.getState();
  const open = _M6ZA7XUPcjs.defaultValue.call(void 0, 
    props.open,
    syncState == null ? void 0 : syncState.open,
    props.defaultOpen,
    false
  );
  const animated = _M6ZA7XUPcjs.defaultValue.call(void 0, props.animated, syncState == null ? void 0 : syncState.animated, false);
  const initialState = {
    open,
    animated,
    animating: !!animated && open,
    mounted: open,
    contentElement: _M6ZA7XUPcjs.defaultValue.call(void 0, syncState == null ? void 0 : syncState.contentElement, null),
    disclosureElement: _M6ZA7XUPcjs.defaultValue.call(void 0, syncState == null ? void 0 : syncState.disclosureElement, null)
  };
  const disclosure = _6SPJEESBcjs.createStore.call(void 0, initialState, props.store);
  disclosure.setup(
    () => disclosure.sync(
      (state) => {
        if (state.animated)
          return;
        disclosure.setState("animating", false);
      },
      ["animated", "animating"]
    )
  );
  disclosure.setup(
    () => disclosure.sync(
      (state, prev) => {
        if (!state.animated)
          return;
        const mounting = state === prev;
        const animating = mounting ? state.open : state.open !== prev.open;
        disclosure.setState("animating", animating);
      },
      ["open", "animated"]
    )
  );
  disclosure.setup(
    () => disclosure.sync(
      (state) => {
        disclosure.setState("mounted", state.open || state.animating);
      },
      ["open", "animating"]
    )
  );
  return _6455U47Tcjs.__spreadProps.call(void 0, _6455U47Tcjs.__spreadValues.call(void 0, {}, disclosure), {
    setOpen: (value) => disclosure.setState("open", value),
    show: () => disclosure.setState("open", true),
    hide: () => disclosure.setState("open", false),
    toggle: () => disclosure.setState("open", (open2) => !open2),
    stopAnimation: () => disclosure.setState("animating", false),
    setContentElement: (value) => disclosure.setState("contentElement", value),
    setDisclosureElement: (value) => disclosure.setState("disclosureElement", value)
  });
}



exports.createDisclosureStore = createDisclosureStore;
