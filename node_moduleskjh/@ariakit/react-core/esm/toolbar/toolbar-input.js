import {
  useCompositeInput
} from "../__chunks/HXGZWZML.js";
import {
  useToolbarItem
} from "../__chunks/MERE2IT6.js";
import "../__chunks/M32DI6TL.js";
import "../__chunks/4QNHBDVS.js";
import "../__chunks/X7UZWWYG.js";
import "../__chunks/T3DJZG63.js";
import "../__chunks/OXPV2NBK.js";
import "../__chunks/AGWM73EZ.js";
import "../__chunks/BMLNRUFQ.js";
import "../__chunks/Z3X3QN6P.js";
import {
  createElement,
  createHook,
  createMemoComponent
} from "../__chunks/5ETIGB6O.js";
import "../__chunks/AV5WE37O.js";
import "../__chunks/ASYR66PQ.js";
import "../__chunks/SXC6BPOF.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/4BKCJXBM.js";

// src/toolbar/toolbar-input.ts
var useToolbarInput = createHook(
  (_a) => {
    var _b = _a, { store } = _b, props = __objRest(_b, ["store"]);
    props = useCompositeInput(__spreadValues({ store }, props));
    props = useToolbarItem(__spreadValues({ store }, props));
    return props;
  }
);
var ToolbarInput = createMemoComponent(
  (props) => {
    const htmlProps = useToolbarInput(props);
    return createElement("input", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  ToolbarInput.displayName = "ToolbarInput";
}
export {
  ToolbarInput,
  useToolbarInput
};
