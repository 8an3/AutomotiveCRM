import * as Core from "@ariakit/core/hovercard/hovercard-store";
import type { PopoverStoreFunctions, PopoverStoreOptions, PopoverStoreState } from "../popover/popover-store.js";
import type { Store } from "../utils/store.js";
export declare function useHovercardStoreOptions(props: HovercardStoreProps): {
    getAnchorRect: ((anchor: HTMLElement | null) => {
        x?: number | undefined;
        y?: number | undefined;
        width?: number | undefined;
        height?: number | undefined;
    } | null) | undefined;
    renderCallback: ((props: import("@ariakit/core/popover/popover-store").PopoverStoreRenderCallbackProps) => void | (() => void)) | undefined;
    setOpen?: ((open: boolean) => void) | undefined;
    defaultOpen?: boolean | undefined;
    open?: boolean | undefined;
    animated?: number | boolean | undefined;
};
export declare function useHovercardStoreProps<T extends HovercardStore>(store: T, props: HovercardStoreProps): T;
/**
 * Creates a hovercard store.
 * @see https://ariakit.org/components/hovercard
 * @example
 * ```jsx
 * const hovercard = useHovercardStore({ placement: "top" });
 * <HovercardAnchor store={hovercard}>@username</HovercardAnchor>
 * <Hovercard store={hovercard}>Details</Hovercard>
 * ```
 */
export declare function useHovercardStore(props?: HovercardStoreProps): HovercardStore;
export interface HovercardStoreState extends Core.HovercardStoreState, PopoverStoreState {
}
export interface HovercardStoreFunctions extends Core.HovercardStoreFunctions, PopoverStoreFunctions {
}
export interface HovercardStoreOptions extends Core.HovercardStoreOptions, PopoverStoreOptions {
}
export type HovercardStoreProps = HovercardStoreOptions & Core.HovercardStoreProps;
export type HovercardStore = HovercardStoreFunctions & Store<Core.HovercardStore>;
