import type { HTMLAttributes } from "react";
import type { DialogOptions } from "../dialog/dialog.js";
import type { As, Props } from "../utils/types.js";
import type { PopoverStore } from "./popover-store.js";
/**
 * Returns props to create a `Popover` component.
 * @see https://ariakit.org/components/popover
 * @example
 * ```jsx
 * const store = usePopoverStore();
 * const props = usePopover({ store });
 * <Role {...props}>Popover</Role>
 * ```
 */
export declare const usePopover: import("../utils/types.js").Hook<PopoverOptions<"div">>;
/**
 * Renders a popover element.
 * @see https://ariakit.org/components/popover
 * @example
 * ```jsx
 * const popover = usePopoverStore();
 * <PopoverDisclosure store={popover}>Disclosure</PopoverDisclosure>
 * <Popover store={popover}>Popover</Popover>
 * ```
 */
export declare const Popover: import("../utils/types.js").Component<PopoverOptions<"div">>;
export interface PopoverOptions<T extends As = "div"> extends DialogOptions<T> {
    /**
     * Object returned by the `usePopoverStore` hook.
     */
    store: PopoverStore;
    /**
     * Props that will be passed to the popover wrapper element. This element will
     * be used to position the popover.
     */
    wrapperProps?: HTMLAttributes<HTMLDivElement>;
}
export type PopoverProps<T extends As = "div"> = Props<PopoverOptions<T>>;
