import * as Core from "@ariakit/core/popover/popover-store";
import type { DialogStoreFunctions, DialogStoreOptions, DialogStoreState } from "../dialog/dialog-store.js";
import type { Store } from "../utils/store.js";
export declare function usePopoverStoreOptions(props: PopoverStoreProps): {
    getAnchorRect: ((anchor: HTMLElement | null) => {
        x?: number | undefined;
        y?: number | undefined;
        width?: number | undefined;
        height?: number | undefined;
    } | null) | undefined;
    renderCallback: ((props: Core.PopoverStoreRenderCallbackProps) => void | (() => void)) | undefined;
    setOpen?: ((open: boolean) => void) | undefined;
    defaultOpen?: boolean | undefined;
    open?: boolean | undefined;
    animated?: number | boolean | undefined;
};
export declare function usePopoverStoreProps<T extends PopoverStore>(store: T, props: PopoverStoreProps): T;
/**
 * Creates a popover store.
 * @see https://ariakit.org/components/popover
 * @example
 * ```jsx
 * const popover = usePopoverStore();
 * <PopoverDisclosure store={popover}>Disclosure</PopoverDisclosure>
 * <Popover store={popover}>Popover</Popover>
 * ```
 */
export declare function usePopoverStore(props?: PopoverStoreProps): PopoverStore;
export interface PopoverStoreState extends Core.PopoverStoreState, DialogStoreState {
}
export interface PopoverStoreFunctions extends Core.PopoverStoreFunctions, DialogStoreFunctions {
}
export interface PopoverStoreOptions extends Core.PopoverStoreOptions, DialogStoreOptions {
}
export type PopoverStoreProps = PopoverStoreOptions & Core.PopoverStoreProps;
export type PopoverStore = PopoverStoreFunctions & Store<Core.PopoverStore>;
