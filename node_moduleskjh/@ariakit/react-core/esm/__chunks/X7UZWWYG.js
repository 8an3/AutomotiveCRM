import {
  CollectionContext
} from "./T3DJZG63.js";
import {
  createComponent,
  createElement,
  createHook
} from "./5ETIGB6O.js";
import {
  useForkRef,
  useId
} from "./ASYR66PQ.js";
import {
  __objRest,
  __spreadProps,
  __spreadValues
} from "./4BKCJXBM.js";

// src/collection/collection-item.ts
import { useCallback, useContext, useRef } from "react";
import { identity } from "@ariakit/core/utils/misc";
var useCollectionItem = createHook(
  (_a) => {
    var _b = _a, { store, shouldRegisterItem = true, getItem = identity } = _b, props = __objRest(_b, ["store", "shouldRegisterItem", "getItem"]);
    const context = useContext(CollectionContext);
    store = store || context;
    const id = useId(props.id);
    const unrenderItem = useRef();
    const ref = useCallback(
      (element) => {
        var _a2;
        if (!element || !id || !shouldRegisterItem) {
          return (_a2 = unrenderItem.current) == null ? void 0 : _a2.call(unrenderItem);
        }
        const item = getItem({ id, element });
        unrenderItem.current = store == null ? void 0 : store.renderItem(item);
      },
      [id, shouldRegisterItem, getItem, store]
    );
    props = __spreadProps(__spreadValues({}, props), {
      ref: useForkRef(ref, props.ref)
    });
    return props;
  }
);
var CollectionItem = createComponent(
  (props) => {
    const htmlProps = useCollectionItem(props);
    return createElement("div", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  CollectionItem.displayName = "CollectionItem";
}

export {
  useCollectionItem,
  CollectionItem
};
