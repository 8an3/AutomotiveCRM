import {
  useDialogStoreOptions,
  useDialogStoreProps
} from "./OBNQHP6V.js";
import {
  useStore,
  useStoreProps
} from "./AV5WE37O.js";
import {
  useEvent
} from "./ASYR66PQ.js";
import {
  __spreadProps,
  __spreadValues
} from "./4BKCJXBM.js";

// src/popover/popover-store.ts
import * as Core from "@ariakit/core/popover/popover-store";
function usePopoverStoreOptions(props) {
  const getAnchorRect = useEvent(props.getAnchorRect);
  const renderCallback = useEvent(props.renderCallback);
  return __spreadProps(__spreadValues({}, useDialogStoreOptions(props)), {
    getAnchorRect: props.getAnchorRect ? getAnchorRect : void 0,
    renderCallback: props.renderCallback ? renderCallback : void 0
  });
}
function usePopoverStoreProps(store, props) {
  store = useDialogStoreProps(store, props);
  useStoreProps(store, props, "placement");
  useStoreProps(store, props, "fixed");
  useStoreProps(store, props, "gutter");
  useStoreProps(store, props, "flip");
  useStoreProps(store, props, "shift");
  useStoreProps(store, props, "slide");
  useStoreProps(store, props, "overlap");
  useStoreProps(store, props, "sameWidth");
  useStoreProps(store, props, "fitViewport");
  useStoreProps(store, props, "arrowPadding");
  useStoreProps(store, props, "overflowPadding");
  return store;
}
function usePopoverStore(props = {}) {
  const options = usePopoverStoreOptions(props);
  const store = useStore(
    () => Core.createPopoverStore(__spreadValues(__spreadValues({}, props), options))
  );
  return usePopoverStoreProps(store, props);
}

export {
  usePopoverStoreOptions,
  usePopoverStoreProps,
  usePopoverStore
};
