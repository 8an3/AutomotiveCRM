import {
  useSeparator
} from "./KPEUI6QX.js";
import {
  CompositeContext
} from "./Z3X3QN6P.js";
import {
  createComponent,
  createElement,
  createHook
} from "./5ETIGB6O.js";
import {
  __objRest,
  __spreadProps,
  __spreadValues
} from "./4BKCJXBM.js";

// src/composite/composite-separator.ts
import { useContext } from "react";
import { invariant } from "@ariakit/core/utils/misc";
var useCompositeSeparator = createHook(
  (_a) => {
    var _b = _a, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useContext(CompositeContext);
    store = store || context;
    invariant(
      store,
      process.env.NODE_ENV !== "production" && "CompositeSeparator must be wrapped in a Composite component"
    );
    const orientation = store.useState(
      (state) => state.orientation === "horizontal" ? "vertical" : "horizontal"
    );
    props = useSeparator(__spreadProps(__spreadValues({}, props), { orientation }));
    return props;
  }
);
var CompositeSeparator = createComponent(
  (props) => {
    const htmlProps = useCompositeSeparator(props);
    return createElement("hr", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  CompositeSeparator.displayName = "CompositeSeparator";
}

export {
  useCompositeSeparator,
  CompositeSeparator
};
