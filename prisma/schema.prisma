datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex", "metrics", "views"]
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
}

// ----------------------------------------------------------------------------
// -------------------------------User-----------------------------------------
// -----------------------------------------------------------------------------
model User {
  id                    String                @id @default(cuid())
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  // main
  name                  String
  username              String                @unique
  email                 String                @unique(map: "User.email_unique")
  profileId             String                @unique
  phone                 String?               @unique
  roleId                String
  // stripe
  subscriptionId        String?
  returning             Boolean?              @default(false)
  lastSubscriptionCheck String?
  customerId            String?               @unique
  plan                  String?
  // dealer
  omvicNumber           String?
  dealer                String?
  dept                  String?
  order                 Int?
  // activix
  activixActivated      String?
  activixEmail          String?
  activisUserId         String?
  activixId             String?
  dealerAccountId       String?
  // microsoft
  microId               String?
  // name             String?
  givenName             String?
  familyName            String?
  identityProvider      String?
  // needed
  timeEntries           TimeEntry[]
  workorders            Workorder[]
  positions             Position[]
  userGoals             UserGoals[]
  thirtyDayGoals        ThirtyDayGoal[]
  columnStateSales      ColumnStateSales?
  ColumnStateInventory  ColumnStateInventory?
  ColumnStateClient     ColumnStateClient?
  customerSync          CustomerSync?
  userRoleId            String?
  role                  UserRole              @relation("UserRole", fields: [roleId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  NotificationsUser     NotificationsUser[]
  // not needed
  profile               UserProfile           @relation("UserProfile", fields: [profileId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  images                Image[]               @relation("Images")
  notes                 Note[]                @relation("UserNotes")
  SavedDocuments        SavedDocuments[]
  dealerId              Int?
  Dealer                Dealer?               @relation(fields: [dealerId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@index([dealerId])
  @@index([profileId])
  @@index([roleId])
}

model Dealer {
  id                   Int         @id @default(1)
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
  // dealer info
  dealerName           String?
  dealerAddress        String?
  dealerCity           String?
  dealerProv           String?
  dealerPostal         String?
  dealerPhone          String?
  dealerEmail          String?
  dealerContact        String?
  dealerAdminContact   String?
  dealerEmailAdmin     String?
  dealerEtransferEmail String?
  vercel               String?
  github               String?
  // commissions
  perSale              Float?
  percentage           Float?
  accPerSale           Float?
  accPercentage        Float?
  writerPerSale        Float?
  writerPercentage     Float?
  sentWelcomeEmail     String?
  // store hours
  //  day   String?   @unique
  //  start DateTime?
  //  end   DateTime?
  // dealer fees
  userLoanProt         Int?
  destinationCharge    Int?
  userTireandRim       String?
  userGap              Int?
  userExtWarr          String?
  userServicespkg      Int?
  vinE                 Int?
  lifeDisability       Int?
  rustProofing         Int?
  userLicensing        Int?
  userFinance          String?
  userDemo             String?
  userGasOnDel         String?
  userOMVIC            String?
  userOther            Int?
  userTax              String?
  userAirTax           String?
  userTireTax          String?
  userGovern           String?
  userPDI              String?
  userLabour           String?
  userMarketAdj        String?
  userCommodity        String?
  userFreight          String?
  userAdmin            String?
  userEmail            String?     @unique
  serviceDiscount      String?
  pacDiscount          String?
  salesDiscount        String?
  DealerLogo           DealerLogo?

  users User[]
}

model UserRole {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sequence    Int    @unique // 1 | 2 | 3 | ...
  symbol      String @unique // "ADMIN" | "MANAGER" | "EDITOR"
  name        String @unique // "Administrator" | "Manager" | "Editor"
  description String @db.Text // "User can manage everything"

  users User[] @relation("UserRole")
}

model SavedDocuments {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  document  Json

  user      User   @relation(fields: [userEmail], references: [email])
  userEmail String @unique
}

model ColumnStateInventory {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  state     Json
  user      User     @relation(fields: [userEmail], references: [email], onUpdate: Cascade, onDelete: Cascade)
  userEmail String   @unique
}

model ColumnStateClient {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  state     Json

  user      User   @relation(fields: [userEmail], references: [email])
  userEmail String @unique
}

model CustomerSync {
  updatedAt DateTime @updatedAt

  orderId      String?
  clientfileId String?
  financeId    String?

  user      User   @relation(fields: [userEmail], references: [email])
  userEmail String @id @unique
}

model ColumnStateSales {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userEmail], references: [email])
  userEmail String   @unique
  state     Json
}

model ThirtyDayGoal {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userEmail   String
  title       String?
  description String?
  goal        String?
  expired     Boolean?
  achieved    String?
  days        String?

  User User @relation(fields: [userEmail], references: [email], onDelete: Cascade)

  @@index([userEmail])
}

model UserGoals {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userEmail String
  year      String? @default("2024")
  janGoal   Int?    @default(0)
  febGoal   Int?    @default(0)
  marGoal   Int?    @default(0)
  aprGoal   Int?    @default(0)
  mayGoal   Int?    @default(0)
  junGoal   Int?    @default(0)
  julGoal   Int?    @default(0)
  augGoal   Int?    @default(0)
  sepGoal   Int?    @default(0)
  octGoal   Int?    @default(0)
  novGoal   Int?    @default(0)
  decGoal   Int?    @default(0)
  janAch    Int?    @default(0)
  febAch    Int?    @default(0)
  marAch    Int?    @default(0)
  aprAch    Int?    @default(0)
  mayAch    Int?    @default(0)
  junAch    Int?    @default(0)
  julAch    Int?    @default(0)
  augAch    Int?    @default(0)
  sepAch    Int?    @default(0)
  octAch    Int?    @default(0)
  novAch    Int?    @default(0)
  decAch    Int?    @default(0)

  User User @relation(fields: [userEmail], references: [email], onDelete: Cascade)

  @@index([userEmail])
}

model DeptGoals {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  dept    String
  year    String? @default("2024")
  janGoal Int?    @default(0)
  febGoal Int?    @default(0)
  marGoal Int?    @default(0)
  aprGoal Int?    @default(0)
  mayGoal Int?    @default(0)
  junGoal Int?    @default(0)
  julGoal Int?    @default(0)
  augGoal Int?    @default(0)
  sepGoal Int?    @default(0)
  octGoal Int?    @default(0)
  novGoal Int?    @default(0)
  decGoal Int?    @default(0)

  janAch Int? @default(0)
  febAch Int? @default(0)
  marAch Int? @default(0)
  aprAch Int? @default(0)
  mayAch Int? @default(0)
  junAch Int? @default(0)
  julAch Int? @default(0)
  augAch Int? @default(0)
  sepAch Int? @default(0)
  octAch Int? @default(0)
  novAch Int? @default(0)
  decAch Int? @default(0)
}

model Position {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  position  String?
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String

  @@index([userId])
}

model DealerLogo {
  id        Int      @id @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  dealerLogo String?

  Dealer   Dealer? @relation(fields: [dealerId], references: [id])
  dealerId Int     @unique

  @@index([dealerId])
}

model Interruptions {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userEmail String?
  location  String?
  date      String?
  read      String?
  title     String?
}

model microsoftAccount {
  id               String   @id @default(cuid())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  email            String   @unique
  username         String?
  microId          String?
  name             String?
  givenName        String?
  familyName       String?
  identityProvider String?
}

model UserPassword {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  hash String?

  userId String @unique
  //user   User   @relation("UserPassword", fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@index([userId])
}

model UserProfile {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  headline String?
  bio      String?

  userId  String?           @unique
  user    User?             @relation("UserProfile")
  avatars UserAvatarImage[] @relation("UserAvatars")
  covers  UserCoverImage[]  @relation("UserCovers")

  @@index([userId])
}

model UserAvatarImage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  url      String
  filePath String?

  profileId   String
  userProfile UserProfile @relation("UserAvatars", fields: [profileId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@index([profileId])
}

model UserCoverImage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  url      String
  filePath String?

  profileId   String
  userProfile UserProfile @relation("UserCovers", fields: [profileId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@index([profileId])
}

model NotificationsUser {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  title        String?
  content      String?  @db.Text
  dismiss      String?
  type         String?
  subType      String?
  financeId    String?
  clientfileId String?
  to           String?
  from         String?
  userEmail    String
  customerName String?
  read         Boolean  @default(false)
  messageId    String?  @unique

  User User @relation(fields: [userEmail], references: [email], onDelete: Cascade)

  @@index([userEmail])
}

model Note {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  slug        String @unique
  title       String
  description String @db.Text
  content     String @db.Text

  isPublished Boolean @default(true)
  // isPublished DateTime? @default(now())

  userId String
  user   User        @relation("UserNotes", fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  images NoteImage[] @relation("NoteImages")

  @@index([userId])
}

model NoteImage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  url      String
  filePath String?

  userId String?
  noteId String?
  note   Note?   @relation("NoteImages", fields: [noteId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@index([userId])
  @@index([noteId])
}

// ----------------------------------------------------------------------------
// -------------------------------User-----------------------------------------
// -----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// -------------------------------dev-----------------------------------------
// -----------------------------------------------------------------------------
model Board {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userEmail String?
  boardId   String?
  color     String?
  name      String   @unique
  columns   Column[]
  items     Item[]
}

model Column {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique
  order     Float    @default(0)
  Board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId   String
  items     Item[]

  @@index([boardId])
}

model Item {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  order     Float?
  Board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId   String
  Column    Column   @relation(fields: [columnId], references: [id], onDelete: Cascade)
  columnId  String

  @@index([boardId])
  @@index([columnId])
}

model Csi {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userEmail String?
  csiId     String?
  color     String?
  name      String   @unique

  questions   Question[]
  answers     Answer[]
  answersData AnswerData[]
}

model Question {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique
  order     Float    @default(0)

  Csi   Csi    @relation(fields: [csiId], references: [id], onDelete: Cascade)
  csiId String

  answers     Answer[]
  answersData AnswerData[]

  @@index([csiId])
}

model Answer {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  order     Float?

  Csi   Csi    @relation(fields: [csiId], references: [id], onDelete: Cascade)
  csiId String

  Question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId String

  answersData AnswerData[]

  @@index([csiId])
  @@index([questionId])
}

model AnswerData {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  order     Float?

  Csi   Csi    @relation(fields: [csiId], references: [id], onDelete: Cascade)
  csiId String

  Question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId String

  Answer   Answer @relation(fields: [answerId], references: [id], onDelete: Cascade)
  answerId String

  @@index([answerId])
  @@index([csiId])
  @@index([questionId])
}

// ----------------------------------------------------------------------------
// -------------------------------dev-----------------------------------------
// -----------------------------------------------------------------------------
//--------------------accessories
//--------------------parts
model DSALeads {
  id                   String   @id @default(cuid())
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  dealerName           String?
  dealerAddress        String?
  dealerCity           String?
  dealerProv           String?
  dealerPostal         String?
  dealerPhone          String?
  ownerName            String?
  ownerEmail           String?
  ownerPhone           String?
  adminName            String?
  adminEmail           String?
  adminPhone           String?
  dealerEtransferEmail String?

  generatedFrom      String?
  message            String?
  infoBeforePurchase Boolean?
  justlooking        Boolean?
  demoBeforePurchase Boolean?
  seekingAppointment Boolean?
  timeToPurchase     String?
  triedDemo          Boolean?
  purchased          Boolean?
  status             String?
  read               String?
}

// ----------------------------------------------------------------------------
// -------------------------------dealer-----------------------------------------
// -----------------------------------------------------------------------------
// got this one in dealer
//model userIntergration {
// id               String   @id @default(cuid())
// createdAt        DateTime @default(now())
// updatedAt        DateTime @updatedAt
//  userEmail        String   @unique
//  activixId        String?
//  activixActivated String?
//  dealerAccountId  String?
//  activixEmail     String?
//}

model CsiQuestion {
  id                          Int      @id @default(autoincrement())
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
  title                       String?
  departmentName              String? // Added to identify the department
  departmentIndex             Int?
  questionIndex               Int? // Changed from `inputIndex` to `questionIndex`
  question                    String?
  answerFormat                String?
  customMultipleChoiceAnswer  String? // Assuming this is for a single custom answer
  customMultipleChoiceAnswers String[] // Array for multiple custom answers
}

// dont think we can put this one in dealer because it will have multiple savews for eachd ay
model StoreHours {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  day       String?   @unique
  start     DateTime?
  end       DateTime?
  userEmail String?
}

model StaffChat {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  body      String
  userEmail String
  username  String
  dept      String
  reaction  String?
  reactions Reactions[]
}

model StaffMessages {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  body      String
  from      String
  username  String
  to        String
  userEmail String
}

model Reactions {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  reaction String?

  staffChatId String
  staffchat   StaffChat @relation(fields: [staffChatId], references: [id])

  @@index([staffChatId])
}

// ----------------------------------------------------------------------------
// -------------------------------dealer-----------------------------------------
// -----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// -------------------------------service-----------------------------------------
// -----------------------------------------------------------------------------
model TimeEntry {
  id          String    @id @default(uuid())
  description String
  startTime   DateTime  @default(now())
  endTime     DateTime?
  duration    Float?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userEmail String

  workorderId String
  workorders  Workorder @relation(fields: [workorderId], references: [id])

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  @@index([workorderId])
  @@index([userId])
}

model Workorder {
  id          String  @id @default(uuid())
  number      String
  description String?
  color       String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  timeEntries TimeEntry[]
  userEmail   String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  @@index([userId])
}

model JobCodes {
  id          String  @id @default(uuid())
  number      String
  description String?
  price       String?
  cost        String?
}

model DemoTime {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  end       String?
  start     String?
  userEmail String?
  diff      String?
}

// ----------------------------------------------------------------------------
// -------------------------------service-----------------------------------------
// -----------------------------------------------------------------------------

// ----------------------------------------------------------------------------
// -------------------------------sales-----------------------------------------
// -----------------------------------------------------------------------------

model SalespersonSched {
  id               String    @id @default(cuid())
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  day              String?
  start            DateTime?
  end              DateTime?
  salespersonEmail String?
  userEmail        String?
  title            String?
  resourceId       String?
  userName         String?
  userId           String?
  name             String?
}

model Sales {
  id String @id @default(cuid())

  financeId String?
  email     String
  sales     Int?
  sold      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ----------------------------------------------------------------------------
// -------------------------------sales-----------------------------------------
// -----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// -------------------------------External Assets-----------------------------------------
// -----------------------------------------------------------------------------
model Image {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  url      String // Complete URL to the image
  filePath String? // ImageKit File Path, to be used with ImageKit component

  userId String?
  user   User?   @relation("Images", fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@index([userId])
}

model GetConversation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  jsonData  Json
  userEmail String?
}

// ----------------------------------------------------------------------------
// -------------------------------External Assets-------------------------------
// -----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// -------------------------------scripts / templates---------------------------
// -----------------------------------------------------------------------------
model Script {
  id       String  @id @default(cuid())
  name     String?
  email    String?
  content  String?
  category String?
  subCat   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EmailTemplates {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  subject   String?
  body      String?
  category  String?
  userEmail String?
  dept      String?
  subCat    String?
  type      String?
}

model EmailTemplatesForDropdown {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  subCat    String?
  body      String?
  userEmail String?
  category  String?
  type      String?
  subject   String?
}

model EmailClient {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstName   String?
  lastName    String?
  name        String?
  body        String?
  userEmail   String?
  category    String?
  type        String?
  subject     String?
  cc          String?
  bcc         String?
  attributes  String?
  dept        String?
  label       String?
  attachments String?
  to          String?
  review      String?
  date        String?
  fromEmail   String?
}

// so user can add their own templates to the drop down on overview, finance dashbaoard or anywhere where the overview is displayed
model UserEmailTemplates {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userEmail String?
  body      String?
  subject   String?
  review    String?
}

// ----------------------------------------------------------------------------
// -------------------------------scripts / templates---------------------------
// -----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// -------------------------------print docs---------------------------
// -----------------------------------------------------------------------------
model UCDAForm {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  finance   Finance? @relation("finance", fields: [financeId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  financeId String?  @unique

  seenOwnership                String?
  originalOwner                String?
  vinChecked                   String?
  orignialVinPlate             String?
  registeredLien               String?
  totalLoss                    String?
  theftRecovery                String?
  manuWarrCancelled            String?
  outOfProv                    String?
  usVehicle                    String?
  dailyRental                  String?
  fireDmg                      String?
  waterDmg                     String?
  policeCruiser                String?
  paintedBodyPanels            String?
  absInoperable                String?
  polutionInoperable           String?
  repairsTransmission          String?
  repairsSuspSubframe          String?
  repairsFuelSystem            String?
  repairsPowerTrain            String?
  repairsECU                   String?
  repairsElectrical            String?
  repairsStructuralFrameDamage String?
  alteredOrRepaired            String?
  decalsBadges                 String?
  dmgExcess3000                String?

  @@index([financeId])
}

model SaveMyDoc {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String?

  doc      Json
  docName  String?
  dept     String?
  fileName String?
  category String?
}

model UploadDocs {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  financeId String?
  category  String?
  fileName  String?
  userEmail String?
  itemId    String?
}

model TwilioSMSDetails {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  conversationSid String?
  participantSid  String?
  userSid         String?
  username        String?
  password        String?
  userEmail       String? @unique
  passClient      String?
  myPhone         String?
  proxyPhone      String?
}

// ----------------------------------------------------------------------------
// -------------------------------print docs---------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
//                              finance
// -----------------------------------------------------------------------------
model FinanceProduct {
  id              String            @id @default(cuid())
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  name            String?
  financeProvidor FinanceProvidor[]
  financePrice    FinancePrice[]
}

model FinanceProvidor {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String?
  order     Float    @default(0)

  FinanceProduct   FinanceProduct @relation(fields: [financeProductId], references: [id], onDelete: Cascade)
  financeProductId String

  financePrice FinancePrice[]

  @@index([financeProductId])
}

model FinancePrice {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  packageName  String
  packagePrice Int

  FinanceProduct   FinanceProduct? @relation(fields: [financeProductId], references: [id])
  financeProductId String?

  FinanceProvidor   FinanceProvidor? @relation(fields: [FinanceProvidorId], references: [id])
  FinanceProvidorId String?

  @@index([financeProductId])
  @@index([FinanceProvidorId])
}

// -----------------------------------------------------------------------------
//                              finance
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
//                              finance / clients
// -----------------------------------------------------------------------------
model FinanceStorage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  url      String
  filePath String?

  financeId String?  @unique
  finance   Finance? @relation("finance", fields: [financeId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

model ClientApts {
  id            String    @id @default(cuid())
  financeId     String
  title         String?
  start         String?
  end           String?
  contactMethod String?
  completed     String? // yes or no
  apptStatus    String? // future past present
  apptType      String? // service sales parts ect
  note          String?
  unit          String?
  brand         String?
  firstName     String?
  lastName      String?
  email         String?
  phone         String?
  address       String?
  userEmail     String
  userId        String
  description   String?
  userName      String?
  attachments   String?
  direction     String?
  resultOfcall  String?
  resourceId    Int?
  activixId     String?
  activixNoteId String?   @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  isPublished   DateTime? @default(now())
  finance       Finance?  @relation("finance", fields: [financeId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@index([financeId])
}

model Automations {
  id               String  @id @default(cuid())
  userEmail        String  @unique
  pickUp24before   String?
  appt24before     String?
  noFollowup       String?
  askForReferral   String?
  oneYearAnni      String?
  del7days         String?
  afterDelTY       String?
  afterHoursClosed String?
}

model Automation {
  id           String  @id @default(cuid())
  userEmail    String?
  type         String?
  financeId    String?
  clientfileId String?
}

model CheckLatestEmail {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userEmail     String   @unique
  emailId       String?
  lastEmailSent String?
  subject       String?
  sender        String?
  isRead        String?
}

model WishList {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId        String?
  firstName     String?
  lastName      String?
  email         String?
  phone         String?
  brand         String?
  model         String?
  brand2        String?
  model2        String?
  wishListNotes String?
  notified      String?
}

model DemoDay {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userEmail String?
  firstName String?
  lastName  String?
  email     String?
  phone     String?
  brand     String?
  brand2    String?
  model     String?
  model2    String?
  leadNote  String?
  notified  String?
}

model AccOrder {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userEmail    String?
  userName     String?
  dept         String?
  sellingDept  String?
  total        Float?
  discount     Float?
  discPer      Float?
  paid         Boolean?
  paidDate     String?
  status       String?
  workOrderId  Int?
  note         String?
  financeId    String?
  clientfileId String

  AccessoriesOnOrders AccessoriesOnOrders[]
  Payments            Payment[]

  WorkOrder  WorkOrder?   @relation(fields: [workOrderId], references: [workOrderId])
  Finance    Finance?     @relation(fields: [financeId], references: [id], onDelete: SetNull)
  AccHandoff AccHandoff[]
  Clientfile Clientfile   @relation(fields: [clientfileId], references: [id], onDelete: Cascade)

  @@index([clientfileId])
  @@index([workOrderId])
  @@index([financeId])
}

model AccHandoff {
  id              String   @id @default(cuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())
  sendTo          String?
  handOffTime     String?
  status          String?
  sendToCompleted String?  @default("false")
  completedTime   String?
  notes           String?
  handOffDept     String?

  AccOrderId String
  AccOrder   AccOrder @relation(fields: [AccOrderId], references: [id], onDelete: Cascade)

  @@index([AccOrderId])
}

model AccessoriesOnOrders {
  id          String  @id @default(cuid())
  quantity    Int     @default(1)
  accOrderId  String?
  status      String? @default("In Stock")
  orderNumber String?
  OrderInvId  String?
  accessoryId String
  service     String?
  hour        Int?

  orderInventory OrderInventory? @relation(fields: [OrderInvId], references: [id])
  accessory      Accessories     @relation(fields: [accessoryId], references: [id], onDelete: Cascade)
  accOrder       AccOrder?       @relation(fields: [accOrderId], references: [id])

  @@unique([accOrderId, accessoryId])
  @@unique([OrderInvId])
}

model Accessories {
  id                  String   @id @default(cuid())
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  partNumber          String?
  brand               String?
  name                String?
  price               Float?
  cost                Float?
  quantity            Int?
  minQuantity         Int?
  description         String?
  category            String?
  subCategory         String?
  onOrder             Int?
  distributer         String?
  location            String?
  note                String?
  workOrderSuggestion String?

  AccessoriesOnOrders AccessoriesOnOrders[]
}

model Payment {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  paymentType String?
  cardType    String?
  amountPaid  Float?
  cardNum     String?
  receiptId   String?
  financeId   String?
  userEmail   String?
  accOrderId  String?
  workOrderId Int?

  AccOrder  AccOrder?  @relation(fields: [accOrderId], references: [id], onDelete: Cascade)
  Finance   Finance?   @relation(fields: [financeId], references: [id], onDelete: SetNull)
  WorkOrder WorkOrder? @relation(fields: [workOrderId], references: [workOrderId])

  @@index([workOrderId])
  @@index([accOrderId])
  @@index([financeId])
}

model OrderInventory {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  userEmail  String?
  userName   String?
  attachedId String?
  dept       String?
  total      Float?
  discount   Float?
  discPer    Float?
  status     String?
  sendTo     String?

  AccessoriesOnOrders AccessoriesOnOrders[]
}

// -----------------------------------------------------------------------------
// client
// -----------------------------------------------------------------------------
model Clientfile {
  id             String   @id @default(cuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  financeId      String?  @unique
  userId         String?
  firstName      String?
  lastName       String?
  name           String?
  email          String?  @unique
  phone          String?
  address        String?
  city           String?
  postal         String?
  province       String?
  dl             String?
  typeOfContact  String?
  timeToContact  String?
  conversationId String?
  billingAddress Boolean?
  dob            String?

  AccOrder    AccOrder[]
  Finance     Finance[]
  WorkOrder   WorkOrder[]
  ServiceUnit ServiceUnit[]
  Comm        Comm[]
}

// -----------------------------------------------------------------------------
// service
// -----------------------------------------------------------------------------

model Session {
  id           String    @id @default(uuid())
  data         String?   @db.Text
  expires      DateTime?
  email        String?
  expiresAt    DateTime?
  refreshToken String?
  accessToken  String?
  name         String?
  clientId     String?
  clientSecret String?
}

// -----------------------------------------------------------------------------
// finance paticulars
// -----------------------------------------------------------------------------
model LockFinanceTerminals {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  locked       Boolean  @default(false)
  financeId    String?
  salesEmail   String?
  financeEmail String?
  customerName String?
  unit         String?
  note         String?
  response     Boolean? @default(false)
}

model Finance {
  // employees
  financeManager      String?
  userEmail           String?
  userName            String? // need to add //   // need to add on site actions //
  financeManagerName  String? // need to add //   // need to add on site actions //
  // client
  email               String?
  firstName           String?
  lastName            String?
  phone               String?
  name                String?
  address             String?
  city                String?
  postal              String?
  province            String?
  dl                  String?
  typeOfContact       String?
  timeToContact       String?
  dob                 String?
  // finance
  othTax              String?
  optionsTotal        String?
  lienPayout          String?
  leadNote            String?
  sendToFinanceNow    String?
  dealNumber          String?
  iRate               String?
  months              String?
  discount            String?
  total               String?
  onTax               String?
  on60                String?
  biweekly            String?
  weekly              String?
  weeklyOth           String?
  biweekOth           String?
  oth60               String?
  weeklyqc            String?
  biweeklyqc          String?
  qc60                String?
  biweeklNatWOptions  String?
  weeklylNatWOptions  String?
  nat60WOptions       String?
  weeklyOthWOptions   String?
  biweekOthWOptions   String?
  oth60WOptions       String?
  biweeklNat          String?
  weeklylNat          String?
  nat60               String?
  qcTax               String?
  otherTax            String?
  totalWithOptions    String?
  otherTaxWithOptions String?
  desiredPayments     String?
  admin               String?
  commodity           String?
  pdi                 String?
  discountPer         String?
  userLoanProt        Int?
  userTireandRim      String?
  userGap             Int?
  userExtWarr         String?
  userServicespkg     Int?
  deliveryCharge      Int?
  vinE                Int?
  lifeDisability      Int?
  rustProofing        Int?
  userOther           Int?
  // dates
  referral            String?
  visited             String?
  bookedApt           String?
  aptShowed           String?
  aptNoShowed         String?
  testDrive           String?
  metService          String?
  metManager          String?
  metParts            String?
  sold                String?
  depositMade         String?
  depositTakenDate    String?
  deposit             String?

  refund                   String?
  turnOver                 String?
  financeApp               String?
  approved                 String?
  signed                   String?
  pickUpSet                String?
  demoed                   String?
  lastContact              String?
  status                   String?
  customerState            String?
  result                   String?
  timesContacted           String?
  nextAppointment          String?
  followUpDay              String?
  deliveryDate             String?
  delivered                String?
  deliveredDate            String?
  notes                    String?
  visits                   String?
  progress                 String?
  metSalesperson           String?
  metFinance               String?
  financeApplication       String?
  pickUpDate               String?
  pickUpTime               String?
  docsSigned               String?
  tradeRepairs             String?
  seenTrade                String?
  lastNote                 String?
  applicationDone          String?
  licensingSent            String?
  liceningDone             String?
  refunded                 String?
  cancelled                String?
  lost                     String?
  dLCopy                   String?
  insCopy                  String?
  testDrForm               String?
  voidChq                  String?
  loanOther                String?
  signBill                 String?
  ucda                     String?
  tradeInsp                String?
  customerWS               String?
  otherDocs                String?
  urgentFinanceNote        String?
  funded                   String?
  leadSource               String?
  financeDeptProductsTotal String?
  bank                     String?
  loanNumber               String?
  idVerified               String?
  dealerCommission         String?
  financeCommission        String?
  salesCommission          String?
  firstPayment             String?
  loanMaturity             String?
  quoted                   String?
  // calls
  InPerson                 Int?                  @default(0)
  Phone                    Int?                  @default(0)
  SMS                      Int?                  @default(0)
  Email                    Int?                  @default(0)
  Other                    Int?                  @default(0)
  //------already moved
  // wanted unit
  paintPrem                String?
  licensing                String?
  stockNum                 String?
  options                  String?
  accessories              Float?
  freight                  String?
  labour                   String?
  year                     String?
  brand                    String?
  mileage                  String?
  model                    String?
  model1                   String?
  color                    String?
  modelCode                String?
  msrp                     String?
  trim                     String?
  vin                      String?
  bikeStatus               String?
  invId                    String?
  motor                    String?
  tag                      String?
  tradeValue               String?
  tradeDesc                String?
  tradeColor               String?
  tradeYear                String?
  tradeMake                String?
  tradeVin                 String?
  tradeTrim                String?
  tradeMileage             String?
  tradeLocation            String?
  lien                     String?
  id                       String                @id @default(cuid())
  activixId                String?               @unique
  theRealActId             String?
  createdAt                DateTime              @default(now())
  updatedAt                DateTime              @updatedAt
  clientfileId             String?
  inventoryMotorcycleId    String?
  InventoryMotorcycle      InventoryMotorcycle?
  //
  financeStorage           FinanceStorage[]      @relation("finance")
  clientApts               ClientApts[]          @relation("finance")
  Comm                     Comm[]
  FinanceDeptProducts      FinanceDeptProducts[]
  FinanceUnit              FinanceUnit[]
  FinanceTradeUnit         FinanceTradeUnit[]
  AccOrders                AccOrder[]
  WorkOrders               WorkOrder[]
  Payments                 Payment[]
  FinanceNote              FinanceNote[]
  //
  Clientfile               Clientfile?           @relation(fields: [clientfileId], references: [id], onDelete: Cascade)
  //
  finManOptions            FinManOptions[]       @relation("finance")
  bmwMotoOptions           BmwMotoOptions[]      @relation("finance")
  uCDAForm                 UCDAForm[]            @relation("finance")
  FinCanOptions            FinCanOptions[]       @relation("finance")

  @@index([clientfileId])
}

model FinanceNote {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  body         String?
  userEmail    String?
  userName     String?
  clientfileId String

  financeId     String?
  finance       Finance?        @relation(fields: [financeId], references: [id], onDelete: Cascade)
  selectedUsers SelectedUsers[]

  @@index([financeId])
}

model SelectedUsers {
  id            String      @id @default(cuid())
  createdAt     DateTime    @default(now())
  selectedName  String?
  selectedEmail String?
  FinanceNoteId String
  FinanceNote   FinanceNote @relation(fields: [FinanceNoteId], references: [id], onDelete: Cascade)

  @@index([FinanceNoteId])
}

model FinancePayment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  paymentType String?
  amountPaid  Float?
  cardNum     String?
  receiptId   String?
}

model FinanceUnit {
  paintPrem   String?
  licensing   String?
  stockNum    String?
  options     String?
  accessories Int?
  freight     String?
  labour      String?
  year        String?
  brand       String?
  mileage     String?
  model       String?
  model1      String?
  color       String?
  modelCode   String?
  msrp        String?
  trim        String?
  vin         String?
  bikeStatus  String?
  invId       String?
  location    String?
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  financeId   String

  Finance    Finance     @relation(fields: [financeId], references: [id], onDelete: Cascade)
  WorkOrders WorkOrder[]

  @@index([financeId])
}

model FinanceTradeUnit {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  financeId   String
  price       String?
  brand       String?
  model       String?
  color       String?
  accessories String?
  options     String?
  year        String?
  vin         String?
  trim        String?
  mileage     String?
  location    String?
  condition   String?
  repairs     String?
  stockNum    String?
  licensing   Boolean?
  tradeEval   Boolean?

  Finance Finance @relation(fields: [financeId], references: [id], onDelete: Cascade)

  @@index([financeId])
}

model InventoryMotorcycle {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  packageNumber      String? ///
  packagePrice       String? //
  stockNumber        String? //
  type               String? //
  class              String? //
  year               String? //
  make               String? //
  model              String? //
  modelName          String? //
  submodel           String? //
  subSubmodel        String? //
  price              String? //
  exteriorColor      String? ///
  mileage            String? //
  consignment        Boolean? @default(false) //
  onOrder            Boolean? @default(false)
  expectedOn         String? //
  status             String? //
  orderStatus        String? //
  hdcFONumber        String? //
  hdmcFONumber       String? //
  vin                String? //
  age                Int?     @default(1) //
  floorPlanDueDate   String? //
  location           String? //
  stocked            Boolean? @default(false) //
  stockedDate        String? //
  isNew              Boolean? @default(true) //
  actualCost         String? //
  mfgSerialNumber    String? //
  engineNumber       String? //
  plates             String? //
  keyNumber          String? //
  length             String?
  width              String? ///
  engine             String? //
  fuelType           String? //
  power              String? //
  chassisNumber      String? //
  chassisYear        String? //
  chassisMake        String? //
  chassisModel       String? //
  chassisType        String? //
  registrationState  String? ///
  registrationExpiry String? //
  grossWeight        String? //
  netWeight          String? //
  insuranceCompany   String? //
  policyNumber       String? //
  insuranceAgent     String? //
  insuranceStartDate String? //
  insuranceEndDate   String? //
  sold               Boolean? @default(false) //

  // need to ad
  freight Float?

  financeId  String?     @unique
  Finance    Finance?    @relation(fields: [financeId], references: [id], onDelete: Cascade)
  workOrders WorkOrder[]

  @@index([financeId])
}

// for styling the workorder have a timeline on the left hand side for the unit and all its workorders with a title and show description that you can click on so its easy to find work orders and you dont have to go through each one on the right it would be make a new workorde rand everything you need to do that it will be the same styling for the unit page for the work order / unit info side have a tab that have the cuistomer info on the second tab wherre you can assign a customer
model WorkOrder {
  workOrderId   Int       @id @default(autoincrement())
  unit          String?
  mileage       String?
  vin           String?
  tag           String?
  motor         String?
  color         String?
  budget        String?
  waiter        Boolean?
  totalLabour   Float?
  totalParts    Float?
  subTotal      Float?
  total         Float?
  writer        String?
  userEmail     String?
  tech          String?
  discDollar    Float?
  discPer       Float?
  techEmail     String?
  notes         String?
  customerSig   String?
  status        String?
  location      String?
  quoted        String?
  paid          String?
  remaining     String?
  FinanceUnitId String?
  ServiceUnitId String?
  financeId     String?
  clientfileId  String?
  note          String?
  closedAt      DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  FinanceUnit           FinanceUnit?           @relation(fields: [FinanceUnitId], references: [id], onDelete: Cascade)
  ServiceUnit           ServiceUnit[]
  AccOrders             AccOrder[]
  Finance               Finance?               @relation(fields: [financeId], references: [id], onDelete: Cascade)
  Clientfile            Clientfile?            @relation(fields: [clientfileId], references: [id], onDelete: Cascade)
  ServicesOnWorkOrders  ServicesOnWorkOrders[]
  Payments              Payment[]
  WorkOrderApts         WorkOrderApts[]
  WorkOrderClockEntries WorkOrderClockEntry[]
  WorkOrderNotes        WorkOrderNotes[]
  inventoryMotorcycleId String?
  InventoryMotorcycle   InventoryMotorcycle?   @relation(fields: [inventoryMotorcycleId], references: [id], onDelete: Cascade)

  @@index([inventoryMotorcycleId])
  @@index([clientfileId])
  @@index([FinanceUnitId])
  @@index([financeId])
  @@index([ServiceUnitId])
}

model WorkOrderApts {
  id          String     @id @default(cuid())
  tech        String?
  techEmail   String?
  writer      String?
  start       String?
  end         String?
  title       String?
  workOrderId Int?
  completed   Boolean?
  resourceId  String?
  unit        String?
  mileage     String?
  vin         String?
  tag         String?
  motor       String?
  color       String?
  location    String?
  WorkOrder   WorkOrder? @relation(fields: [workOrderId], references: [workOrderId], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([workOrderId])
}

model WorkOrderNotes {
  id          String     @id @default(cuid())
  body        String?
  userName    String?
  userEmail   String?
  workOrderId Int?
  WorkOrder   WorkOrder? @relation(fields: [workOrderId], references: [workOrderId], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([workOrderId])
}

model WorkOrderClockEntry {
  id          Int       @id @default(autoincrement())
  start       DateTime
  end         DateTime?
  userEmail   String
  username    String
  workOrderId Int

  WorkOrder WorkOrder @relation(fields: [workOrderId], references: [workOrderId], onDelete: Cascade)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([workOrderId])
}

model ServicesOnWorkOrders {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  quantity    Int      @default(1)
  hr          Float?
  status      String?
  workOrderId Int?
  serviceId   String

  WorkOrder WorkOrder? @relation(fields: [workOrderId], references: [workOrderId], onDelete: Cascade)
  service   Services   @relation(fields: [serviceId], references: [id], onDelete: Cascade)

  @@index([workOrderId])
}

model Services {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String?
  estHr       Float?
  service     String?
  price       Float?

  ServicesOnWorkOrder ServicesOnWorkOrders[]
}

model ServiceUnit {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  price        String?
  brand        String?
  model        String?
  color        String?
  accessories  String?
  options      String?
  year         String?
  vin          String?
  trim         String?
  mileage      String?
  location     String?
  condition    String?
  repairs      String?
  stockNum     String?
  motor        String?
  tag          String?
  licensing    Boolean?
  tradeEval    Boolean?
  clientfileId String?

  WorkOrders WorkOrder[]
  Clientfile Clientfile? @relation(fields: [clientfileId], references: [id], onDelete: Cascade)

  @@index([clientfileId])
}

model Comm {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userEmail    String?
  type         String?
  body         String?
  subject      String?
  userName     String?
  direction    String?
  result       String?
  ClientfileId String?
  Clientfile   Clientfile? @relation(fields: [ClientfileId], references: [id], onDelete: Cascade)
  financeId    String?
  Finance      Finance?    @relation(fields: [financeId], references: [id], onDelete: Cascade)

  @@index([financeId])
  @@index([ClientfileId])
}

model FinanceDeptProducts {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  packageName  String
  packagePrice Int

  financeId String?
  finance   Finance? @relation(fields: [financeId], references: [id])

  @@index([financeId])
}

model FinanceApplication {
  id                 String  @id @default(cuid())
  financeId          String?
  clientfileId       String?
  fullName           String?
  dob                String?
  sin                String?
  phone              String?
  email              String?
  streetAddress      String?
  city               String?
  province           String?
  postalCode         String?
  addressDuration    String?
  employer           String?
  job                String?
  employmentStatus   String?
  employerAddress    String?
  employerCity       String?
  employerProvince   String?
  employerPostal     String?
  employerPhone      String?
  employmentDuration String?
  monthlyGrossIncome String?
  bankName           String?
  branchAddress      String?
  mortgagePayment    String?
  utilities          String?
  propertyTaxes      String?
  loanType           String?
  loanMonthlyPayment String?
  remainingBalance   String?
  notes              String?
  finMgrEmail        String?
  userEmail          String?
}

model FinManOptions {
  id                  String   @id @default(cuid())
  finance             Finance? @relation("finance", fields: [financeId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  financeId           String?
  email               String?
  BEandTR             String?
  intColor1           String?
  licensingMan        String?
  licensingManTr      String?
  dts                 String?
  verado              String?
  motor               String?
  sigPkgCruise        String?
  biminiCr            String?
  wallCol             String?
  wallColCr           String?
  colorCruise         String?
  furnitureColor      String?
  sigPkgExplore       String?
  selPkgExplore       String?
  tubesExplore        String?
  colorExplore        String?
  wallColorExplore    String?
  sigPkgLX            String?
  selRFXPkgLX         String?
  selRFXWPkgLX        String?
  blkPkg              String?
  blkPkgLX            String?
  wallGraphic         String?
  colMatchedFiberLX   String?
  powderCoatingLX     String?
  blackAnoLX          String?
  premiumJLLX         String?
  JLTowerLX           String?
  wallColorLX         String?
  wallGraphicLX       String?
  wallGraphicAccentLX String?
  fibreGlassPodsLX    String?
  powderCoatLX        String?
  signature           String?
  select              String?
  tubeColor           String?
  furnitureLX         String?
  flooringLX          String?
  blackoutPkgXT       String?
  signaturePkgXT      String?
  premAudioPkg        String?
  XTPremiumcolor      String?
  JLPremiumxt         String?
  JlPremiumAudio      String?
  fibreglassFrontXT   String?
  WallGraphicXT       String?
  powderCoatXT        String?
  furnitureXT         String?
  battery             String?
  propeller           String?
  gps                 String?
  saltwaterPkg        String?
  baseInst            String?
  cupHolder           String?
  multiHolder         String?
  cooler13            String?
  coolerExtension     String?
  coolerBag14         String?
  singleHolder        String?
  stemwareHolder      String?
  cargoBox10          String?
  cargoBox20          String?
  cargoBox30          String?
  rodHolder           String?
  batteryCharger      String?
  bowFillerBench      String?
  portAquaLounger     String?
  skiTowMirror        String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([financeId])
}

model FinCanOptions {
  id        String   @id @default(cuid())
  financeId String   @unique
  finance   Finance? @relation("finance", fields: [financeId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  baseInst        String?
  cupHolder       String?
  multiHolder     String?
  cooler13        String?
  stemwareHolder  String?
  coolerExtension String?
  coolerBag14     String?
  singleHolder    String?
  cargoBox10      String?
  cargoBox20      String?
  cargoBox30      String?
  rodHolder       String?
  batteryCharger  String?
  bowFillerBench  String?
  skiTowMirror    String?
  portAquaLounger String?
  Essentialkg     String?
  ComfortPkg      String?
  watersports     String?
  familyBundle    String?
  BatterySwitch   String?
  familyBundleSW  String?
  watersportsSW   String?
  EssentialpkgSW  String?
  ComfortPkgSW    String?
  BRPAudio        String?
  UltimateAudio   String?
  BRPAudioL       String?
  SunshadeSW      String?
  ThermalInsert   String?
  CargoTile       String?
  VerticalSupport String?
  BRPAudioRl0     String?
  familyBundlesSP String?
  watersportsSP   String?
  ComfortPkgSP    String?
  familyBundleCR  String?
  ComfortPkgCR    String?
  HeatedGrips     String?
  TrailerLock     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BmwMotoOptions {
  id                  String   @id @default(cuid())
  finance             Finance? @relation("finance", fields: [financeId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  financeId           String   @unique
  m1000rMPkg          String?
  m1000rTitEx         String?
  desOption           String?
  m1000rrMPkg         String?
  s1000rrRacePkg      String?
  s1000rrRacePkg2     String?
  f7gsConn            String?
  f8gsDblSeat         String?
  r12rtAudioSystem    String?
  f9xrHandProtectors  String?
  r12gsCrossGld       String?
  r12gsSpSusp         String?
  r12gsProtBar        String?
  r12gsCrossBlk       String?
  audioSystem         String?
  highShield          String?
  psgrKit             String?
  alarm               String?
  color               String?
  chain               String?
  comfortPkg          String?
  touringPkg          String?
  activePkg           String?
  dynamicPkg          String?
  offTire             String?
  keyless             String?
  headlightPro        String?
  shiftAssPro         String?
  tpc                 String?
  cruise              String?
  windshield          String?
  handleBar           String?
  extraHighSeat       String?
  alumTank1           String?
  alumTank2           String?
  classicW            String?
  silencer            String?
  chromedExhaust      String?
  crossW              String?
  highSeat            String?
  lowKitLowSeat       String?
  lowSeat             String?
  passengerKitLowSeat String?
  comfortPsgrSeat     String?
  mPsgrSeat           String?

  // bmwoptions2
  comfortSeat        String?
  designW            String?
  loweringKit        String?
  forgedWheels       String?
  carbonWheels       String?
  centerStand        String?
  billetPack1        String?
  billetPack2        String?
  heatedSeat         String?
  lugRack            String?
  lugRackBrackets    String?
  chargeSocket       String?
  auxLights          String?
  mLightBat          String?
  carbonPkg          String?
  enduroPkg          String?
  sportShield        String?
  sportWheels        String?
  sportSeat          String?
  brownBench         String?
  brownSeat          String?
  handleRisers       String?
  lgihtsPkg          String?
  fogLights          String?
  pilSeatCover       String?
  lapTimer           String?
  floorLight         String?
  blackBench         String?
  hillStart          String?
  floorboards        String?
  reverse            String?
  forkTubeTrim       String?
  spokedW            String?
  lockGasCap         String?
  aeroWheel          String?
  psgrBench719       String?
  blackS719          String?
  aero719            String?
  pinstripe          String?
  designPkgBL        String?
  benchseatlow       String?
  iconWheel          String?
  centreStand        String?
  tubeHandle         String?
  classicWheels      String?
  blackContrastwheel String?
  silverContastWheel String?
  silverWheel        String?
  activeCruise       String?
  blackPowertrain    String?
  blackWheel         String?
  aeroPkg719         String?
}

//model BmwMotoOptions2 {
// id                 String   @id @default(cuid())
// finance            Finance? @relation("finance", fields: [financeId], references: [id], onUpdate: Cascade, onDelete: Cascade)
// financeId          String   @unique

//}

// -----------------------------------------------------------------------------
// aactivix records
// -----------------------------------------------------------------------------
model ActivixLead {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  activixId String?  @unique

  account_id      String?
  customer_id     String?
  source_id       String?
  phoneId         String?
  vehicleIdWanted String?
  vehicleIdWTrade String?
  emailId         String?

  Integer                 String?
  provider_id             String?
  appointment_date        String?
  phone_appointment_date  String?
  available_date          String?
  be_back_date            String?
  birth_date              String?
  call_date               String?
  created_at              String?
  csi_date                String?
  delivered_date          String?
  deliverable_date        String?
  delivery_date           String?
  home_presented_date     String?
  paperwork_date          String?
  presented_date          String?
  promised_date           String?
  financed_date           String?
  road_test_date          String?
  home_road_test_date     String?
  sale_date               String?
  take_over_date          String?
  unsubscribe_all_date    String?
  unsubscribe_call_date   String?
  unsubscribe_email_date  String?
  unsubscribe_sms_date    String?
  updated_at              String?
  address_line1           String?
  address_line2           String?
  business                String?
  business_name           String?
  campaign                String?
  city                    String?
  civility                String?
  country                 String?
  created_method          String?
  credit_approved         String?
  dealer_tour             String?
  division                String?
  financial_institution   String?
  first_name              String?
  form                    String?
  funded                  String?
  gender                  String?
  inspected               String?
  keyword                 String?
  last_name               String?
  locale                  String?
  navigation_history      String?
  postal_code             String?
  progress_state          String?
  provider                String?
  province                String?
  qualification           String?
  rating                  String?
  referrer                String?
  result                  String?
  search_term             String?
  second_contact          String?
  second_contact_civility String?
  segment                 String?
  source                  String?
  status                  String?
  type                    String?
  walk_around             String?
  comment                 String?
  advisor                 String?
  delivered_by            String?
  emails                  String?
  emails2                 String?
  phones                  String?
  phones2                 String?
  phones3                 String?
  financeId               String? @unique
  dashboardId             String?
  userEmail               String?
  promised_datere         String?
}

model activixCommunication {
  id            String  @id @unique
  financeId     String?
  lead_id       String?
  user_id       String?
  created_at    String?
  updated_at    String?
  executed_at   String?
  method        String?
  type          String?
  description   String?
  call_duration String?
  call_phone    String?
  call_status   String?
  email_subject String?
  email_body    String?
  email_user    String?
  url           String?
  answered      String?
  attempted     String?
  error         String?
  interrupted   String?
  pending       String?
  unanswered    String?
}

model activixEmail {
  id         String  @id @unique
  financeId  String?
  lead_id    String?
  created_at String?
  updated_at String?
  address    String?
  type       String?
  string     String?
  valid      String?
}

model activixEvent {
  id           String  @id @unique
  financeId    String?
  lead_id      String?
  owner_id     String?
  completed_at String?
  created_at   String?
  end_at       String?
  start_at     String?
  updated_at   String?
  canceled     String?
  completed    String?
  confirmed    String?
  description  String?
  no_show      String?
  priority     String?
  title        String?
  Attribute    String?
  lead         String?
  owner        String?
}

model activixNotes {
  id         String  @id @unique
  financeId  String?
  parent_id  String?
  lead_id    String?
  user_id    String?
  created_at String?
  updated_at String?
  content    String?
  file_url   String?
}

model activixPhones {
  id         String  @id @unique
  financeId  String?
  lead_id    String?
  created_at String?
  updated_at String?
  extension  String?
  number     String?
  type       String?
  valid      String?
}

model activixProducts {
  id                               String  @id @unique
  financeId                        String?
  created_at                       String?
  updated_at                       String?
  category                         String?
  minutes                          String?
  notes                            String?
  premium                          String?
  price                            String?
  sold                             String?
  boolean                          String?
  name                             String?
  type                             String?
  label                            String?
  ins_filling                      String?
  ins_rental                       String?
  ins_invalidity                   String?
  ins_health                       String?
  ins_life                         String?
  extended_warranty                String?
  rustproofing                     String?
  chiselling                       String?
  anti_theft                       String?
  starter                          String?
  window_tint                      String?
  pre_paid_maintenance             String?
  seat_protection                  String?
  financing                        String?
  pef                              String?
  pep                              String?
  other                            String?
  pellicule                        String?
  windshield_treatment             String?
  paint_treatment                  String?
  roof_treatment                   String?
  leather_tissu_interior_treatment String?
  maintenance_a                    String?
  maintenance_b                    String?
  maintenance_c                    String?
  maintenance_d                    String?
  maintenance_recommended          String?
  diagnostic                       String?
  air_filter                       String?
  pollen_filter                    String?
  alignment                        String?
  brakes                           String?
  injection                        String?
  transmission                     String?
  wash                             String?
  tires                            String?
  parts                            String?
  body                             String?
  oil_filter                       String?
  others                           String?
  niotext                          String?
  walk_in                          String?
  sale_table                       String?
  in_turn                          String?
  renewal                          String?
  event                            String?
  service                          String?
}

model activixUser {
  id         String  @id @unique
  financeId  String?
  created_at String?
  updated_at String?
  email      String?
  first_name String?
  last_name  String?
}

model activixVehicle {
  id                String  @id @unique
  financeId         String?
  lead_id           String?
  created_at        String?
  end_contract_date String?
  end_warranty_date String?
  purchase_date     String?
  recorded_date     String?
  sold_date         String?
  updated_at        String?
  accessories       String?
  actual_value      String?
  allowed_odometer  String?
  balance           String?
  cash_down         String?
  category          String?
  category_rv       String?
  certified         String?
  client_number     String?
  color_exterior    String?
  color_interior    String?
  comment           String?
  condition         String?
  driving_wheels    String?
  engine            String?
  extended_warranty String?
  fuel              String?
  license_plate     String?
  make              String?
  modality          String?
  model             String?
  odometer          String?
  offer_number      String?
  option            String?
  order_number      String?
  payment           String?
  payment_frequency String?
  preparation       String?
  price             String?
  profit            String?
  rate              String?
  recall            String?
  residual          String?
  security_deposit  String?
  sleeping          String?
  sold              String?
  sold_by           String?
  stock             String?
  stock_state       String?
  term              String?
  tire              String?
  transmission      String?
  string            String?
  trim              String?
  type              String?
  value             String?
  vin               String?
  warranty          String?
  weight            String?
  year              String?
  budget_max        String?
  budget_min        String?
  length_max        String?
  length_min        String?
  year_max          String?
  year_min          String?
  Attribute         String?
  verified_by       String?
}

model activixTask {
  id           String  @id @unique
  financeId    String?
  lead_id      String?
  owner_id     String?
  completed_at String?
  created_at   String?
  date         String?
  updated_at   String?
  completed    String?
  description  String?
  priority     String?
  title        String?
  type         String?
}

// -----------------------------------------------------------------------------
// Models
// -----------------------------------------------------------------------------
model Canam {
  id        String  @id @default(cuid())
  model     String  @unique
  model1    String?
  color     String?
  modelCode String?
  freight   String?
  commodity String?
  pdi       String?
  msrp      String?
}

model Canamsxs {
  id        String  @id @default(cuid())
  model     String  @unique
  model1    String?
  color     String?
  modelCode String?
  freight   String?
  commodity String?
  pdi       String?
  msrp      String?
}

model Skidoo {
  id        String  @id @default(cuid())
  model     String  @unique
  model1    String?
  color     String?
  modelCode String?
  freight   String?
  commodity String?
  pdi       String?
  msrp      String?
}

model Switch {
  id        String  @id @default(cuid())
  model     String  @unique
  model1    String?
  color     String?
  modelCode String?
  freight   String?
  commodity String?
  pdi       String?
  msrp      String?
}

model Seadoo {
  id        String  @id @default(cuid())
  model     String  @unique
  model1    String?
  color     String?
  modelCode String?
  freight   String?
  commodity String?
  pdi       String?
  msrp      String?
}

model Spyder {
  id        String  @id @default(cuid())
  model     String  @unique
  model1    String?
  color     String?
  modelCode String?
  freight   String?
  commodity String?
  pdi       String?
  msrp      String?
}

model Suzuki {
  id        String  @id @default(cuid())
  model     String  @unique
  model1    String?
  color     String?
  modelCode String?
  freight   String?
  commodity String?
  pdi       String?
  msrp      String?
}

model Manitou {
  id                       String @id @default(cuid())
  model                    String @unique
  length                   Int?
  trailer                  Int?
  boatEngineAndTrailerFees Int?
  engineRigging            Int?
  enginePreRigPrice        Int?
  nmma                     Int?
  engineFreight            Int?
  msrp                     Int?
}

model Bmwmoto {
  id        String  @id @default(cuid())
  model     String  @unique
  color     String?
  msrp      Int?
  paintPrem Int?
  brand     String?
}

model Triumph {
  id        String  @id @default(cuid())
  model     String  @unique
  color     String?
  msrp      Int?
  paintPrem Int?
  brand     String?
}

model Kawasaki {
  id        String  @id @default(cuid())
  model     String  @unique
  color     String?
  msrp      Int?
  paintPrem Int?
  brand     String?
}

model Harley {
  id    String  @id @default(cuid())
  model String  @unique
  color String?
  msrp  Int?
}

model Harley24 {
  id    String  @id @default(cuid())
  model String  @unique
  color String?
  msrp  Int?
}

model Yamaha {
  id    String  @id @default(cuid())
  model String  @unique
  color String?
  msrp  Int?
}

model Ktm {
  id    String  @id @default(cuid())
  model String  @unique
  color String?
  msrp  Int?
}

model Indian {
  id    String  @id @default(cuid())
  model String  @unique
  color String?
  msrp  Int?
}

model my24canam {
  id String @id @default(cuid())

  model String  @unique
  color String?
  msrp  Int?
  url   String?
  spec  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
