import type { As, Options, Props } from "../utils/types.js";
import type { DisclosureStore } from "./disclosure-store.js";
/**
 * Returns props to create a `DislosureContent` component.
 * @see https://ariakit.org/components/disclosure
 * @example
 * ```jsx
 * const store = useDisclosureStore();
 * const props = useDisclosureContent({ store });
 * <Disclosure store={store}>Disclosure</Disclosure>
 * <Role {...props}>Content</Role>
 * ```
 */
export declare const useDisclosureContent: import("../utils/types.js").Hook<DisclosureContentOptions<"div">>;
/**
 * Renders an element that can be shown or hidden.
 * @see https://ariakit.org/components/disclosure
 * @example
 * ```jsx
 * const disclosure = useDisclosureStore();
 * <Disclosure store={disclosure}>Disclosure</Disclosure>
 * <DisclosureContent store={disclosure}>Content</DisclosureContent>
 * ```
 */
export declare const DisclosureContent: import("../utils/types.js").Component<DisclosureContentOptions<"div">>;
export interface DisclosureContentOptions<T extends As = "div"> extends Options<T> {
    /**
     * Object returned by the `useDisclosureStore` hook.
     */
    store: DisclosureStore;
}
export type DisclosureContentProps<T extends As = "div"> = Props<DisclosureContentOptions<T>>;
