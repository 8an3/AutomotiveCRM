"use strict";Object.defineProperty(exports, "__esModule", {value: true});


var _2WZVSPAIcjs = require('../__chunks/2WZVSPAI.cjs');




var _7NAIPZYNcjs = require('../__chunks/7NAIPZYN.cjs');



var _6455U47Tcjs = require('../__chunks/6455U47T.cjs');

// src/combobox/combobox-item-value.tsx
var _react = require('react');
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
function normalizeValue(value) {
  return _misc.normalizeString.call(void 0, value).toLowerCase();
}
function splitValue(itemValue, userValue) {
  userValue = normalizeValue(userValue);
  let index = normalizeValue(itemValue).indexOf(userValue);
  const parts = [];
  while (index !== -1) {
    if (index !== 0) {
      parts.push(
        /* @__PURE__ */ _jsxruntime.jsx.call(void 0, "span", { "data-autocomplete-value": "", children: itemValue.substr(0, index) }, parts.length)
      );
    }
    parts.push(
      /* @__PURE__ */ _jsxruntime.jsx.call(void 0, "span", { "data-user-value": "", children: itemValue.substr(index, userValue.length) }, parts.length)
    );
    itemValue = itemValue.substr(index + userValue.length);
    index = normalizeValue(itemValue).indexOf(userValue);
  }
  if (itemValue) {
    parts.push(
      /* @__PURE__ */ _jsxruntime.jsx.call(void 0, "span", { "data-autocomplete-value": "", children: itemValue }, parts.length)
    );
  }
  return parts;
}
var useComboboxItemValue = _7NAIPZYNcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store, value } = _b, props = _6455U47Tcjs.__objRest.call(void 0, _b, ["store", "value"]);
    const context = _react.useContext.call(void 0, _2WZVSPAIcjs.ComboboxContext);
    store = store || context;
    const itemContext = _react.useContext.call(void 0, _2WZVSPAIcjs.ComboboxItemValueContext);
    const itemValue = value != null ? value : itemContext;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "ComboboxItemValue must be wrapped in a ComboboxItem component"
    );
    const stateValue = store.useState(
      (state) => itemValue && state.value ? state.value : void 0
    );
    const children = _react.useMemo.call(void 0, 
      () => itemValue && stateValue ? splitValue(itemValue, stateValue) : itemValue,
      [itemValue, stateValue]
    );
    props = _6455U47Tcjs.__spreadValues.call(void 0, {
      children
    }, props);
    return props;
  }
);
var ComboboxItemValue = _7NAIPZYNcjs.createComponent.call(void 0, 
  (props) => {
    const htmlProps = useComboboxItemValue(props);
    return _7NAIPZYNcjs.createElement.call(void 0, "span", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  ComboboxItemValue.displayName = "ComboboxItemValue";
}



exports.ComboboxItemValue = ComboboxItemValue; exports.useComboboxItemValue = useComboboxItemValue;
