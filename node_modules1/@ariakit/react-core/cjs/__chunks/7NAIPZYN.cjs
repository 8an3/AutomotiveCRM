"use strict";Object.defineProperty(exports, "__esModule", {value: true});


var _6455U47Tcjs = require('./6455U47T.cjs');

// src/utils/system.tsx
var _react = require('react');
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
function isRenderProp(children) {
  return typeof children === "function";
}
function createComponent(render) {
  const Role = (props, ref) => render(_6455U47Tcjs.__spreadValues.call(void 0, { ref }, props));
  return _react.forwardRef.call(void 0, Role);
}
function createMemoComponent(render) {
  const Role = createComponent(render);
  return _react.memo.call(void 0, Role);
}
function createElement(Type, props) {
  const _a = props, { as: As, wrapElement } = _a, rest = _6455U47Tcjs.__objRest.call(void 0, _a, ["as", "wrapElement"]);
  let element;
  if (As && typeof As !== "string") {
    element = /* @__PURE__ */ _jsxruntime.jsx.call(void 0, As, _6455U47Tcjs.__spreadValues.call(void 0, {}, rest));
  } else if (isRenderProp(props.children)) {
    const _b = rest, { children } = _b, otherProps = _6455U47Tcjs.__objRest.call(void 0, _b, ["children"]);
    element = props.children(otherProps);
  } else if (As) {
    element = /* @__PURE__ */ _jsxruntime.jsx.call(void 0, As, _6455U47Tcjs.__spreadValues.call(void 0, {}, rest));
  } else {
    element = /* @__PURE__ */ _jsxruntime.jsx.call(void 0, Type, _6455U47Tcjs.__spreadValues.call(void 0, {}, rest));
  }
  if (wrapElement) {
    return wrapElement(element);
  }
  return element;
}
function createHook(useProps) {
  const useRole = (props = {}) => {
    const htmlProps = useProps(props);
    const copy = {};
    for (const prop in htmlProps) {
      if (_misc.hasOwnProperty.call(void 0, htmlProps, prop) && htmlProps[prop] !== void 0) {
        copy[prop] = htmlProps[prop];
      }
    }
    return copy;
  };
  return useRole;
}






exports.createComponent = createComponent; exports.createMemoComponent = createMemoComponent; exports.createElement = createElement; exports.createHook = createHook;
