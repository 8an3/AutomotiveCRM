"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } }


var _RD47UJK7cjs = require('./RD47UJK7.cjs');



var _F7HVNVHQcjs = require('./F7HVNVHQ.cjs');


var _NREUHWTUcjs = require('./NREUHWTU.cjs');



var _6455U47Tcjs = require('./6455U47T.cjs');

// src/popover/popover-store.ts
var _popoverstore = require('@ariakit/core/popover/popover-store'); var Core = _interopRequireWildcard(_popoverstore);
function usePopoverStoreOptions(props) {
  const getAnchorRect = _NREUHWTUcjs.useEvent.call(void 0, props.getAnchorRect);
  const renderCallback = _NREUHWTUcjs.useEvent.call(void 0, props.renderCallback);
  return _6455U47Tcjs.__spreadProps.call(void 0, _6455U47Tcjs.__spreadValues.call(void 0, {}, _RD47UJK7cjs.useDialogStoreOptions.call(void 0, props)), {
    getAnchorRect: props.getAnchorRect ? getAnchorRect : void 0,
    renderCallback: props.renderCallback ? renderCallback : void 0
  });
}
function usePopoverStoreProps(store, props) {
  store = _RD47UJK7cjs.useDialogStoreProps.call(void 0, store, props);
  _F7HVNVHQcjs.useStoreProps.call(void 0, store, props, "placement");
  _F7HVNVHQcjs.useStoreProps.call(void 0, store, props, "fixed");
  _F7HVNVHQcjs.useStoreProps.call(void 0, store, props, "gutter");
  _F7HVNVHQcjs.useStoreProps.call(void 0, store, props, "flip");
  _F7HVNVHQcjs.useStoreProps.call(void 0, store, props, "shift");
  _F7HVNVHQcjs.useStoreProps.call(void 0, store, props, "slide");
  _F7HVNVHQcjs.useStoreProps.call(void 0, store, props, "overlap");
  _F7HVNVHQcjs.useStoreProps.call(void 0, store, props, "sameWidth");
  _F7HVNVHQcjs.useStoreProps.call(void 0, store, props, "fitViewport");
  _F7HVNVHQcjs.useStoreProps.call(void 0, store, props, "arrowPadding");
  _F7HVNVHQcjs.useStoreProps.call(void 0, store, props, "overflowPadding");
  return store;
}
function usePopoverStore(props = {}) {
  const options = usePopoverStoreOptions(props);
  const store = _F7HVNVHQcjs.useStore.call(void 0, 
    () => Core.createPopoverStore(_6455U47Tcjs.__spreadValues.call(void 0, _6455U47Tcjs.__spreadValues.call(void 0, {}, props), options))
  );
  return usePopoverStoreProps(store, props);
}





exports.usePopoverStoreOptions = usePopoverStoreOptions; exports.usePopoverStoreProps = usePopoverStoreProps; exports.usePopoverStore = usePopoverStore;
