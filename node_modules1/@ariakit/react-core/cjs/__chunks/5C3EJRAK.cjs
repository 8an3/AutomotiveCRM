"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _NVBNDB5Bcjs = require('./NVBNDB5B.cjs');




var _7NAIPZYNcjs = require('./7NAIPZYN.cjs');





var _NREUHWTUcjs = require('./NREUHWTU.cjs');




var _6455U47Tcjs = require('./6455U47T.cjs');

// src/hovercard/hovercard-anchor.ts
var _react = require('react');
var _events = require('@ariakit/core/utils/events');
var useHovercardAnchor = _7NAIPZYNcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store, showOnHover = true } = _b, props = _6455U47Tcjs.__objRest.call(void 0, _b, ["store", "showOnHover"]);
    const disabled = props.disabled || props["aria-disabled"] === true || props["aria-disabled"] === "true";
    const showTimeoutRef = _react.useRef.call(void 0, 0);
    _react.useEffect.call(void 0, () => () => window.clearTimeout(showTimeoutRef.current), []);
    _react.useEffect.call(void 0, () => {
      const onMouseLeave = (event) => {
        const { anchorElement } = store.getState();
        if (!anchorElement)
          return;
        if (event.target !== anchorElement)
          return;
        window.clearTimeout(showTimeoutRef.current);
        showTimeoutRef.current = 0;
      };
      return _events.addGlobalEventListener.call(void 0, "mouseleave", onMouseLeave, true);
    }, [store]);
    const onMouseMoveProp = props.onMouseMove;
    const showOnHoverProp = _NREUHWTUcjs.useBooleanEvent.call(void 0, showOnHover);
    const isMouseMoving = _NREUHWTUcjs.useIsMouseMoving.call(void 0, );
    const onMouseMove = _NREUHWTUcjs.useEvent.call(void 0, 
      (event) => {
        store.setAnchorElement(event.currentTarget);
        onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);
        if (disabled)
          return;
        if (event.defaultPrevented)
          return;
        if (showTimeoutRef.current)
          return;
        if (!isMouseMoving())
          return;
        if (!showOnHoverProp(event))
          return;
        const { showTimeout } = store.getState();
        showTimeoutRef.current = window.setTimeout(() => {
          showTimeoutRef.current = 0;
          if (!isMouseMoving())
            return;
          store.show();
        }, showTimeout);
      }
    );
    props = _6455U47Tcjs.__spreadProps.call(void 0, _6455U47Tcjs.__spreadValues.call(void 0, {}, props), {
      ref: _NREUHWTUcjs.useForkRef.call(void 0, store.setAnchorElement, props.ref),
      onMouseMove
    });
    props = _NVBNDB5Bcjs.useFocusable.call(void 0, props);
    return props;
  }
);
var HovercardAnchor = _7NAIPZYNcjs.createComponent.call(void 0, 
  (props) => {
    const htmlProps = useHovercardAnchor(props);
    return _7NAIPZYNcjs.createElement.call(void 0, "a", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  HovercardAnchor.displayName = "HovercardAnchor";
}




exports.useHovercardAnchor = useHovercardAnchor; exports.HovercardAnchor = HovercardAnchor;
