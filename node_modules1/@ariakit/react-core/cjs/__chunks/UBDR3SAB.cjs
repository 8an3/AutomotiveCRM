"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _NVMBKFRBcjs = require('./NVMBKFRB.cjs');




var _7NAIPZYNcjs = require('./7NAIPZYN.cjs');




var _NREUHWTUcjs = require('./NREUHWTU.cjs');




var _6455U47Tcjs = require('./6455U47T.cjs');

// src/composite/composite-hover.ts
var _react = require('react');
var _dom = require('@ariakit/core/utils/dom');
var _focus = require('@ariakit/core/utils/focus');
var _misc = require('@ariakit/core/utils/misc');
function getMouseDestination(event) {
  const relatedTarget = event.relatedTarget;
  if ((relatedTarget == null ? void 0 : relatedTarget.nodeType) === Node.ELEMENT_NODE) {
    return relatedTarget;
  }
  return null;
}
function hoveringInside(event) {
  const nextElement = getMouseDestination(event);
  if (!nextElement)
    return false;
  return _dom.contains.call(void 0, event.currentTarget, nextElement);
}
function movingToAnotherItem(event) {
  const dest = getMouseDestination(event);
  if (!dest)
    return false;
  const item = _dom.closest.call(void 0, dest, "[data-composite-hover]");
  return !!item;
}
var useCompositeHover = _7NAIPZYNcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store, focusOnHover = true } = _b, props = _6455U47Tcjs.__objRest.call(void 0, _b, ["store", "focusOnHover"]);
    const context = _react.useContext.call(void 0, _NVMBKFRBcjs.CompositeContext);
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "CompositeHover must be wrapped in a Composite component"
    );
    const isMouseMoving = _NREUHWTUcjs.useIsMouseMoving.call(void 0, );
    const onMouseMoveProp = props.onMouseMove;
    const focusOnHoverProp = _NREUHWTUcjs.useBooleanEvent.call(void 0, focusOnHover);
    const onMouseMove = _NREUHWTUcjs.useEvent.call(void 0, (event) => {
      var _a2;
      onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);
      if (event.defaultPrevented)
        return;
      if (!isMouseMoving())
        return;
      if (!focusOnHoverProp(event))
        return;
      if (!_focus.hasFocusWithin.call(void 0, event.currentTarget)) {
        (_a2 = store == null ? void 0 : store.getState().baseElement) == null ? void 0 : _a2.focus();
      }
      store == null ? void 0 : store.setActiveId(event.currentTarget.id);
    });
    const onMouseLeaveProp = props.onMouseLeave;
    const onMouseLeave = _NREUHWTUcjs.useEvent.call(void 0, (event) => {
      var _a2;
      onMouseLeaveProp == null ? void 0 : onMouseLeaveProp(event);
      if (event.defaultPrevented)
        return;
      if (!isMouseMoving())
        return;
      if (hoveringInside(event))
        return;
      if (movingToAnotherItem(event))
        return;
      if (!focusOnHoverProp(event))
        return;
      store == null ? void 0 : store.setActiveId(null);
      (_a2 = store == null ? void 0 : store.getState().baseElement) == null ? void 0 : _a2.focus();
    });
    props = _6455U47Tcjs.__spreadProps.call(void 0, _6455U47Tcjs.__spreadValues.call(void 0, {
      "data-composite-hover": ""
    }, props), {
      onMouseMove,
      onMouseLeave
    });
    return props;
  }
);
var CompositeHover = _7NAIPZYNcjs.createMemoComponent.call(void 0, 
  (props) => {
    const htmlProps = useCompositeHover(props);
    return _7NAIPZYNcjs.createElement.call(void 0, "div", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  CompositeHover.displayName = "CompositeHover";
}




exports.useCompositeHover = useCompositeHover; exports.CompositeHover = CompositeHover;
