"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _4K6QJIPXcjs = require('./4K6QJIPX.cjs');


var _W5PBA4D6cjs = require('./W5PBA4D6.cjs');




var _7NAIPZYNcjs = require('./7NAIPZYN.cjs');



var _NREUHWTUcjs = require('./NREUHWTU.cjs');




var _6455U47Tcjs = require('./6455U47T.cjs');

// src/popover/popover-arrow.tsx
var _react = require('react');
var _dom = require('@ariakit/core/utils/dom');
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
var defaultSize = 30;
var halfDefaultSize = defaultSize / 2;
var rotateMap = {
  top: `rotate(180 ${halfDefaultSize} ${halfDefaultSize})`,
  right: `rotate(-90 ${halfDefaultSize} ${halfDefaultSize})`,
  bottom: `rotate(0 ${halfDefaultSize} ${halfDefaultSize})`,
  left: `rotate(90 ${halfDefaultSize} ${halfDefaultSize})`
};
function useComputedStyle(store) {
  const [style, setStyle] = _react.useState.call(void 0, );
  const contentElement = store.useState("contentElement");
  _NREUHWTUcjs.useSafeLayoutEffect.call(void 0, () => {
    if (!contentElement)
      return;
    const win = _dom.getWindow.call(void 0, contentElement);
    const computedStyle = win.getComputedStyle(contentElement);
    setStyle(computedStyle);
  }, [contentElement]);
  return style;
}
var usePopoverArrow = _7NAIPZYNcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store, size = defaultSize } = _b, props = _6455U47Tcjs.__objRest.call(void 0, _b, ["store", "size"]);
    const context = _react.useContext.call(void 0, _W5PBA4D6cjs.PopoverContext);
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "PopoverArrow must be wrapped in a Popover component"
    );
    const dir = store.useState(
      (state) => state.currentPlacement.split("-")[0]
    );
    const style = useComputedStyle(store);
    const fill = (style == null ? void 0 : style.getPropertyValue("background-color")) || "none";
    const stroke = (style == null ? void 0 : style.getPropertyValue(`border-${dir}-color`)) || "none";
    const borderWidth = (style == null ? void 0 : style.getPropertyValue(`border-${dir}-width`)) || "0px";
    const strokeWidth = parseInt(borderWidth) * 2 * (defaultSize / size);
    const transform = rotateMap[dir];
    const children = _react.useMemo.call(void 0, 
      () => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, "svg", { display: "block", viewBox: "0 0 30 30", children: /* @__PURE__ */ _jsxruntime.jsxs.call(void 0, "g", { transform, children: [
        /* @__PURE__ */ _jsxruntime.jsx.call(void 0, "path", { fill: "none", d: _4K6QJIPXcjs.POPOVER_ARROW_PATH }),
        /* @__PURE__ */ _jsxruntime.jsx.call(void 0, "path", { stroke: "none", d: _4K6QJIPXcjs.POPOVER_ARROW_PATH })
      ] }) }),
      [transform]
    );
    props = _6455U47Tcjs.__spreadProps.call(void 0, _6455U47Tcjs.__spreadValues.call(void 0, {
      children,
      "aria-hidden": true
    }, props), {
      ref: _NREUHWTUcjs.useForkRef.call(void 0, store.setArrowElement, props.ref),
      style: _6455U47Tcjs.__spreadValues.call(void 0, {
        // server side rendering
        position: "absolute",
        fontSize: size,
        width: "1em",
        height: "1em",
        pointerEvents: "none",
        fill,
        stroke,
        strokeWidth
      }, props.style)
    });
    return props;
  }
);
var PopoverArrow = _7NAIPZYNcjs.createComponent.call(void 0, (props) => {
  const htmlProps = usePopoverArrow(props);
  return _7NAIPZYNcjs.createElement.call(void 0, "div", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  PopoverArrow.displayName = "PopoverArrow";
}




exports.usePopoverArrow = usePopoverArrow; exports.PopoverArrow = PopoverArrow;
