import {
  FormContext
} from "../__chunks/P3I4MECH.js";
import {
  useButton
} from "../__chunks/OQUXG6FE.js";
import "../__chunks/4QNHBDVS.js";
import "../__chunks/AGWM73EZ.js";
import "../__chunks/BMLNRUFQ.js";
import {
  createComponent,
  createElement,
  createHook
} from "../__chunks/5ETIGB6O.js";
import "../__chunks/ASYR66PQ.js";
import "../__chunks/SXC6BPOF.js";
import {
  __objRest,
  __spreadProps,
  __spreadValues
} from "../__chunks/4BKCJXBM.js";

// src/form/form-submit.ts
import { useContext } from "react";
import { invariant } from "@ariakit/core/utils/misc";
var useFormSubmit = createHook(
  (_a) => {
    var _b = _a, { store, accessibleWhenDisabled = true } = _b, props = __objRest(_b, ["store", "accessibleWhenDisabled"]);
    const context = useContext(FormContext);
    store = store || context;
    invariant(
      store,
      process.env.NODE_ENV !== "production" && "FormSubmit must be wrapped in a Form component"
    );
    props = __spreadValues({
      type: "submit",
      disabled: store.useState("submitting")
    }, props);
    props = useButton(__spreadProps(__spreadValues({}, props), { accessibleWhenDisabled }));
    return props;
  }
);
var FormSubmit = createComponent((props) => {
  const htmlProps = useFormSubmit(props);
  return createElement("button", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  FormSubmit.displayName = "FormSubmit";
}
export {
  FormSubmit,
  useFormSubmit
};
