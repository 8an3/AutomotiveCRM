import {
  usePopover
} from "../__chunks/JJHXFKMC.js";
import "../__chunks/EMZ4NQG4.js";
import "../__chunks/ZFMAA4DD.js";
import "../__chunks/4H6H5RRM.js";
import "../__chunks/7A3SODQV.js";
import "../__chunks/RBUEJWRA.js";
import "../__chunks/T3WBUAHU.js";
import "../__chunks/KUXENZYT.js";
import "../__chunks/KOVUJERF.js";
import "../__chunks/62DFK33R.js";
import "../__chunks/BH4YAZB2.js";
import "../__chunks/DJESYNLE.js";
import "../__chunks/6WVG5KFF.js";
import "../__chunks/ISPCL6N4.js";
import "../__chunks/7JNF6I52.js";
import "../__chunks/6OMX4H3W.js";
import "../__chunks/COQHFAEN.js";
import "../__chunks/LNHZLQEK.js";
import "../__chunks/6GS36SYX.js";
import "../__chunks/AGWM73EZ.js";
import "../__chunks/BMLNRUFQ.js";
import "../__chunks/USCWE5QL.js";
import "../__chunks/DIO64N2C.js";
import "../__chunks/LDDPB3PY.js";
import "../__chunks/6AJCHLAV.js";
import "../__chunks/JQEVJM46.js";
import {
  createComponent,
  createElement,
  createHook
} from "../__chunks/5ETIGB6O.js";
import {
  useEvent
} from "../__chunks/ASYR66PQ.js";
import "../__chunks/SXC6BPOF.js";
import {
  __objRest,
  __spreadProps,
  __spreadValues
} from "../__chunks/4BKCJXBM.js";

// src/composite/composite-overflow.ts
var hiddenStyle = {
  opacity: 0,
  pointerEvents: "none"
};
var useCompositeOverflow = createHook(
  (_a) => {
    var _b = _a, {
      store,
      backdropProps: backdropPropsProp,
      wrapperProps: wrapperPropsProp,
      portal = false
    } = _b, props = __objRest(_b, [
      "store",
      "backdropProps",
      "wrapperProps",
      "portal"
    ]);
    const onFocusProp = props.onFocus;
    const onFocus = useEvent((event) => {
      onFocusProp == null ? void 0 : onFocusProp(event);
      if (event.defaultPrevented)
        return;
      store.show();
    });
    const mounted = store.useState("mounted");
    const getStyle = (styleProp) => mounted ? styleProp : __spreadValues(__spreadValues({}, hiddenStyle), styleProp);
    const backdropProps = __spreadProps(__spreadValues({
      hidden: false
    }, backdropPropsProp), {
      style: getStyle(backdropPropsProp == null ? void 0 : backdropPropsProp.style)
    });
    const wrapperProps = __spreadProps(__spreadValues({}, wrapperPropsProp), {
      style: getStyle(wrapperPropsProp == null ? void 0 : wrapperPropsProp.style)
    });
    props = __spreadProps(__spreadValues({
      role: "presentation",
      hidden: false,
      focusable: false
    }, props), {
      onFocus
    });
    props = usePopover(__spreadValues({
      store,
      backdropProps,
      wrapperProps,
      portal
    }, props));
    return props;
  }
);
var CompositeOverflow = createComponent(
  (props) => {
    const htmlProps = useCompositeOverflow(props);
    return createElement("div", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  CompositeOverflow.displayName = "CompositeOverflow";
}
export {
  CompositeOverflow,
  useCompositeOverflow
};
