import { objectSpread2 as _objectSpread2 } from './_virtual/_rollupPluginBabelHelpers.js';
import { resolve, setValue } from './formdata.js';
import { getIntent, parseListCommand, updateList } from './intent.js';

function parse(payload, options) {
  var submission = {
    intent: getIntent(payload),
    payload: resolve(payload),
    error: {}
  };
  var command = parseListCommand(submission.intent);
  if (command) {
    setValue(submission.payload, command.scope, list => {
      if (typeof list !== 'undefined' && !Array.isArray(list)) {
        throw new Error('The list command can only be applied to a list');
      }
      return updateList(list !== null && list !== void 0 ? list : [], command);
    });
  }
  if (typeof (options === null || options === void 0 ? void 0 : options.resolve) === 'undefined') {
    return submission;
  }
  var result = options.resolve(submission.payload, submission.intent);
  var mergeResolveResult = resolved => {
    return _objectSpread2(_objectSpread2({}, submission), resolved);
  };
  if (result instanceof Promise) {
    return result.then(mergeResolveResult);
  }
  return mergeResolveResult(result);
}

export { parse };
